version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=sa@123456
      - MSSQL_PID=Developer
    ports:
      - "1450:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P sa@123456 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - ffood-network

  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P sa@123456  -i docker-entrypoint-initdb.d/full.sql;
      echo "All done!";
      '
    networks:
      - ffood-network


  ai-food-classification:
    build: ./api/Food_Classifier
    ports:
      - 8000:8000
    depends_on:
      - sqlserver
      - sqlserver.configurator
    restart: always
    networks:
      - ffood-network

  psql-server:
    build: ./api/psqlserver
    ports:
      - 8001:8001
    depends_on:
      - sqlserver
      - sqlserver.configurator
    restart: always
    networks:
      - ffood-network


  tomcat-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - ffood-network
    depends_on:
      - sqlserver
      - sqlserver.configurator

networks:
  ffood-network:
    name: ffood-network


volumes:
  sqlserver_data:


